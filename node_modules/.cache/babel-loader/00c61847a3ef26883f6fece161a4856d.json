{"ast":null,"code":"var _jsxFileName = \"/home/hamila/Documents/PROJECT/movies1/src/components/MovieList.js\";\nimport MovieCard from './MovieCard';\nimport { Button, Container, Form, Nav, Navbar } from \"react-bootstrap\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(_ref) {\n  let {\n    movies,\n    searchTitle,\n    searchRate\n  } = _ref;\n\n  const ratingChanged = newRating => {\n    setsearchRate(newRating);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: movies.filter(movie => movie.title.toUpperCase().includes(searchTitle.toUpperCase().trim()) && movie.rate >= searchRate).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["MovieCard","Button","Container","Form","Nav","Navbar","ReactStars","MovieList","movies","searchTitle","searchRate","ratingChanged","newRating","setsearchRate","filter","movie","title","toUpperCase","includes","trim","rate","map","id"],"sources":["/home/hamila/Documents/PROJECT/movies1/src/components/MovieList.js"],"sourcesContent":["import MovieCard from './MovieCard'\nimport { Button, Container, Form, Nav, Navbar } from \"react-bootstrap\";\nimport ReactStars from \"react-rating-stars-component\";\n\n\n\n\n\n\n\nfunction MovieList({ movies, searchTitle, searchRate}) {\n  const ratingChanged = (newRating) => {\n    setsearchRate(newRating);\n  };\n \n  return (\n    <>\n   \n   \n            <div className='row justify-content-center'>\n           \n            {movies .filter( (movie) => movie.title .toUpperCase() .includes(searchTitle.toUpperCase().trim()) \n            &&\n            movie.rate >= searchRate).map((movie) => (\n          \n          <MovieCard \n          movie={movie} \n          key={movie.id} \n          />\n        ))}\n                \n                \n            \n            </div>\n        \n        </>\n\n  )\n}\n\nexport default MovieList\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,MAAvC,QAAqD,iBAArD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;;AAQA,SAASC,SAAT,OAAuD;EAAA,IAApC;IAAEC,MAAF;IAAUC,WAAV;IAAuBC;EAAvB,CAAoC;;EACrD,MAAMC,aAAa,GAAIC,SAAD,IAAe;IACnCC,aAAa,CAACD,SAAD,CAAb;EACD,CAFD;;EAIA,oBACE;IAAA,uBAGQ;MAAK,SAAS,EAAC,4BAAf;MAAA,UAECJ,MAAM,CAAEM,MAAR,CAAiBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAaC,WAAb,GAA4BC,QAA5B,CAAqCT,WAAW,CAACQ,WAAZ,GAA0BE,IAA1B,EAArC,KAE5BJ,KAAK,CAACK,IAAN,IAAcV,UAFb,EAEyBW,GAFzB,CAE8BN,KAAD,iBAEhC,QAAC,SAAD;QACA,KAAK,EAAEA;MADP,GAEKA,KAAK,CAACO,EAFX;QAAA;QAAA;QAAA;MAAA,QAJG;IAFD;MAAA;MAAA;MAAA;IAAA;EAHR,iBADF;AAuBD;;KA5BQf,S;AA8BT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}